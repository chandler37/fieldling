<?xml version="1.0" encoding="UTF-8"?>
<qd-configuration>
		<parameter name="qd.root.element" val="TEXT" type="text">
			<desc>This is a required parameter that tells QuillDriver what the root element of its data
			files must be. For example, in this case, it must be 'TEXT'.</desc>
		</parameter>
		<parameter name="qd.mediaurl" val="/TEXT/HEADER/SOUNDFILE/@href">
			<desc>This is a required parameter that tells QuillDriver where to find the audio or video file associated with
			this XML annotation. Its value is an XPATH expression which is based at the root of the XML tree.</desc>
		</parameter>
		<parameter name="qd.timealignednodes" val="//*[AUDIO]">
			<desc>Without this parameter, QuillDriver will not know how to find out which nodes are 'associated'
			with time codes and which are not. The value of this parameter is an XPATH expression which returns
			all XML nodes that are associated with time codes, again searching from the root of the XML tree.</desc>
		</parameter>
		<parameter name="qd.nodebegins" val="AUDIO/@start">
			<desc>The parameter qd.timealignednodes returns the set of XML nodes associated with time codes. Once this
			set is established, then we still need to know how get the start and end time for an associated node.
			This parameter is an XPATH expression which locates the start time for a XML node associated with
			time codes.</desc>
		</parameter>
		<parameter name="qd.nodeends" val="AUDIO/@end">
			<desc>The parameter qd.timealignednodes returns the set of XML nodes associated with time codes. Once this
			set is established, then we still need to know how get the start and end time for an associated node.
			This parameter is an XPATH expression which locates the end time for a XML node associated with
			time codes.</desc>
		</parameter>
		<parameter name="qd.nearestplayableparent" val="ancestor-or-self::*[AUDIO]">
			<desc>For any given node, this required parameter locates the nearest 'playable' parent node.
			When you click on a node in the annotation the default action is to play the nearest playable
			parent node. For example, if time codes are associated with Sentences and you click on a Word,
			then setting this parameter correctly ensures that its containing sentence is played.</desc>
		</parameter>
		<parameter name="speaker1" val="ancestor-or-self::TEXT/HEADER/SPEAKER[position()=1]/@personId">
			<desc>Gets the first speaker.</desc>
		</parameter>
		<parameter name="speaker2" val="ancestor-or-self::TEXT/HEADER/SPEAKER[position()=2]/@personId">
			<desc>Gets the second speaker.</desc>
		</parameter>
		<parameter name="speaker3" val="ancestor-or-self::TEXT/HEADER/SPEAKER[position()=3]/@personId">
			<desc>Gets the third speaker.</desc>
		</parameter>
		<parameter name="speaker4" val="ancestor-or-self::TEXT/HEADER/SPEAKER[position()=4]/@personId">
			<desc>Gets the fourth speaker.</desc>
		</parameter>
		<parameter name="isTranslating" val="yes" type="text">
			<desc>This is a user-defined parameter with a text value rather than an XPATH value.
			If set to 'yes', then the user is translating as well as transcribing, and so translation
			nodes will be regularly inserted. If set to 'no', then the assumption is that the user is
			only transcribing.</desc>
		</parameter>
		
		
		
		<navigation name="Next Playable" keystroke="control DOWN" val="following::*[AUDIO]" command="playNode">
			<desc>This navigation is used to play the next part of the text that has time codes associated with it.
			First, the next playable node is located. Then, it is played because this viewing function is
			associated with the QuillDriver command 'playNode'.</desc>
		</navigation>
		<navigation name="Current Playable" keystroke="control LEFT" val="ancestor-or-self::[*AUDIO]" command="playNode">
			<desc>This navigation is used to play the current part of the text that has time codes associated with it,
			for example, the current sentence. First, the current node is located. Then, it is played because this 
			viewing function is associated with the QuillDriver command 'playNode'.</desc>
		</navigation>
		<navigation name="Previous Playable" keystroke="control UP" val="preceding::*[AUDIO]" command="playNode">
			<desc>This navigation is used to play the last part of the text that has time codes associated with it.
			First, the next playable node is located. Then, it is played because this viewing function is
			associated with the QuillDriver command 'playNode'.</desc>
		</navigation>
		
		
		
		<transformation name="Add Speaker" keystroke="control J" node="ancestor-or-self::TEXT/HEADER" tasks="addSpeaker">
			<desc>This editing function tells the stylesheet to insert another speaker node so that the
			user can add a speaker to this transcription.</desc>
		</transformation>
		<transformation name="Delete Speaker" keystroke="control L" node="ancestor-or-self::SPEAKER" tasks="removeNode">
			<desc>This editing function is used to delete the currently selected speaker.
			Be careful, there is no turning back!</desc>
		</transformation>
		<transformation name="Set Speaker to ka" keystroke="control 1" node="ancestor-or-self::S" tasks="setSpeaker1">
			<desc>This sets the speaker of the current sentence to 'ka', (by convention) t[he first speaker.</desc>
		</transformation>
		<transformation name="Set Speaker to kha" keystroke="control 2" node="ancestor-or-self::S" tasks="setSpeaker2">
			<desc>This sets the speaker of the current sentence to 'kha', (by convention) the second speaker.</desc>
		</transformation>
		<transformation name="Set Speaker to ga" keystroke="control 3" node="ancestor-or-self::S" tasks="setSpeaker3">
			<desc>This sets the speaker of the current sentence to 'ga', (by convention) the third speaker.</desc>
		</transformation>
		<transformation name="Set Speaker to nga" keystroke="control 4" node="ancestor-or-self::S" tasks="setSpeaker4">
			<desc>This sets the speaker of the current sentence to 'nga', (by convention) the fourth speaker.</desc>
		</transformation>
		<transformation name="Mark Start Time" keystroke="control COMMA" node="ancestor-or-self::S" tasks="markStart">
			<desc>This assigns the start time of the current sentence to the start time in the time coding window.</desc>
		</transformation>
		<transformation name="Mark Stop Time" keystroke="control PERIOD" node="ancestor-or-self::S" tasks="markStop">
			<desc>This assigns the stop time of the current sentence to the stop time in the time coding window.</desc>
		</transformation>
		<transformation name="Increase Start Time" keystroke="control EQUALS" node="ancestor-or-self::S" tasks="increaseStart">
			<desc>Increases the start time of the current sentence by a specified value.</desc>
		</transformation>
		<transformation name="Rapid Increase Start" keystroke="alt control EQUALS" node="ancestor-or-self::S" tasks="increaseStart">
			<desc>Increases the start time of the current sentence by a specified value.</desc>
		</transformation>
		<transformation name="Decrease Start Time" keystroke="control MINUS" node="ancestor-or-self::S" tasks="decreaseStart">
			<desc>Decreases the start time of the current sentence by a specified value.</desc>
		</transformation>
		<transformation name="Rapid Decrease Start" keystroke="alt control MINUS" node="ancestor-or-self::S" tasks="decreaseStart">
			<desc>Decreases the start time of the current sentence by a specified value.</desc>
		</transformation>
		<transformation name="Increase Stop Time" keystroke="control CLOSE_BRACKET" node="ancestor-or-self::S" tasks="increaseStop">
			<desc>Increases the stop time of the current sentence by a specified value.</desc>
		</transformation>
		<transformation name="Rapid Increase Stop" keystroke="alt control CLOSE_BRACKET" node="ancestor-or-self::S" tasks="increaseStop">
			<desc>Increases the stop time of the current sentence by a specified value.</desc>
		</transformation>
		<transformation name="Decrease Stop Time" keystroke="control OPEN_BRACKET" node="ancestor-or-self::S" tasks="decreaseStop">
			<desc>Decreases the stop time of the current sentence by a specified value.</desc>
		</transformation>
		<transformation name="Rapid Decrease Stop" keystroke="alt control OPEN_BRACKET" node="ancestor-or-self::S" tasks="decreaseStop">
			<desc>Decreases the stop time of the current sentence by a specified value.</desc>
		</transformation>
		<!--
		<transformation name="Insert Time Codes" keystroke="control /" node="ancestor-or-self::S" tasks="insertTimes">
			<desc>This editing function is used to copy the time codes found under the video next to the 'Start' and 'Stop' buttons into 
			your XML file. They will be copied to the current node you are working on. For example, if you are 
			typing or translating text, they will be assigned to the current 'S' (Sentence) node.</desc>
		</transformation>
		-->
		<transformation name="Insert After" keystroke="control M" node="ancestor-or-self::S" tasks="insertAfter">
			<desc>This function inserts a blank sentence after the current sentence. This new sentence will be assigned the
			same speaker as the current sentence.</desc>
		</transformation>
		<transformation name="Insert Before" keystroke="control N" node="ancestor-or-self::S" tasks="insertBefore">
			<desc>This function inserts a blank sentence before the current sentence. This new sentence will be assigned the
			same speaker as the current sentence.</desc>
		</transformation>
		<transformation name="Insert Translation" keystroke="control T" node="ancestor-or-self::S" tasks="insertTranslation">
			<desc>This editing function adds a translation field to the current sentence.</desc>
		</transformation>
		<transformation name="Delete Sentence" keystroke="control R" node="ancestor-or-self::S" tasks="removeNode">
			<desc>This editing function deletes the sentence you are current working on. Be careful, though! Once you do this there
			is no turning back!</desc>
		</transformation>
		<transformation name="Add Lexical Note" keystroke="alt L" node="ancestor-or-self::S" tasks="addLexical">
			<desc>Use this to add a lexical note to the end of the current Division.</desc>
		</transformation>
		<transformation name="Add Grammatical Note" keystroke="alt G" node="ancestor-or-self::S" tasks="addGrammatical">
			<desc>Use this to add a grammatical note to the end of the current Division.</desc>
		</transformation>
		<transformation name="Add Pronunciation Note" keystroke="alt P" node="ancestor-or-self::S" tasks="addPronunciation">
			<desc>Use this to add a pronunciation note to the end of the current Division.</desc>
		</transformation>
		<transformation name="Add Interpretive Note" keystroke="alt I" node="ancestor-or-self::S" tasks="addInterpretive">
			<desc>Use this to add an interpretive note to the end of the current Division.</desc>
		</transformation>
		<transformation name="Add Sociolinguistic Note" keystroke="alt S" node="ancestor-or-self::S" tasks="addSociolinguistic">
			<desc>Use this to add a sociolinguistic note to the end of the current Division.</desc>
		</transformation>
		<transformation name="Add Cultural Note" keystroke="alt C" node="ancestor-or-self::S" tasks="addCultural">
			<desc>Use this to add a cultural note to the end of the current Division.</desc>
		</transformation>
		<transformation name="Delete Note" keystroke="control G" node="ancestor-or-self::NOTE" tasks="removeNode">
			<desc>Use this to delete the current note.</desc>
		</transformation>
		
		
		
		<tag name="NOTE" visible="true" visiblecontents="true" displayas="XPATH:@type" tibetan="false">
			<attribute name="type" visible="false"/>
			<desc>This tells QuillDriver to render the NOTE tag as the value of its
			'type' attribute.</desc>
		</tag>
		<tag name="AUDIO" visible="false" visiblecontents="false" displayas="[time codes]">
			<desc>This tells QuillDriver to not render the AUDIO tag at all. We do not render this tag since
			time codes are already marked under the video in the time coding area.</desc>
		</tag>
		<tag name="S" visible="true" visiblecontents="true" displayas="XPATH:@who">
			<attribute name="id" visible="false"/>
			<attribute name="who" visible="false"/>
			<desc>This tells QuillDriver to display the S tag as 'S', and to display its contents,
			but to visually suppress its 'id' attribute.</desc>
		</tag>
		<tag name="FORM" visible="true" visiblecontents="true" displayas="TIB" tibetan="true">
			<attribute name="type" visible="false"/>
			<desc>This tells QuillDriver to display the FORM tag as 'TIB', and to display its contents,
			but to visually suppress its 'type' attribute.</desc>
		</tag>
		<tag name="TRANSL" visible="true" visiblecontents="true" displayas="ENG" tibetan="false">
			<attribute name="xml:lang" visible="false"/>
			<desc>This tells QuillDriver to display the TRANSL tag as 'ENG', and to display its contents,
			but to visually suppress its 'xml:lang' attribute.</desc>
		</tag>
</qd-configuration>
