<?xml version="1.0" encoding="UTF-8"?>
<qd-configuration>
		<!-- parameters -->
		<parameter name="qd.root.element" val="LOG" type="text">
			<desc>This is a required parameter that tells QuillDriver what the root element of its data
			files must be. For example, in this case, it must be 'TEXT'.</desc>
		</parameter>
		<parameter name="qd.mediaurl" val="/LOG/HEADER/SOUNDFILE/@href">
			<desc>This is a required parameter that tells QuillDriver where to find the audio or video file associated with
			this XML annotation. Its value is an XPATH expression which is based at the root of the XML tree.</desc>
		</parameter>
		<parameter name="qd.timealignednodes" val="//*[AUDIO]">
			<desc>Without this parameter, QuillDriver will not know how to find out which nodes are 'associated'
			with time codes and which are not. The value of this parameter is an XPATH expression which returns
			all XML nodes that are associated with time codes, again searching from the root of the XML tree.</desc>
		</parameter>
		<parameter name="qd.nodebegins" val="AUDIO/@start">
			<desc>The parameter qd.timealignednodes returns the set of XML nodes associated with time codes. Once this
			set is established, then we still need to know how get the start and end time for an associated node.
			This parameter is an XPATH expression which locates the start time for a XML node associated with
			time codes.</desc>
		</parameter>
		<parameter name="qd.nodeends" val="AUDIO/@end">
			<desc>The parameter qd.timealignednodes returns the set of XML nodes associated with time codes. Once this
			set is established, then we still need to know how get the start and end time for an associated node.
			This parameter is an XPATH expression which locates the end time for a XML node associated with
			time codes.</desc>
		</parameter>
		<parameter name="qd.nearestplayableparent" val="ancestor-or-self::*[AUDIO]">
			<desc>For any given node, this required parameter locates the nearest 'playable' parent node.
			When you click on a node in the annotation the default action is to play the nearest playable
			parent node. For example, if time codes are associated with Divisions and you click on a Note,
			then setting this parameter correctly ensures that its containing Division is played.</desc>
		</parameter>
		
		
		<!-- navigation possibilities -->
		<navigation name="PlayPause" keystroke="control RIGHT" val="." command="playPause">
			<desc>If the media is stopped, this plays it; and if the media is playing, this pauses it.</desc>
		</navigation>
		<navigation name="NextPlayable" keystroke="control DOWN" val="following::*[AUDIO]" command="playNode">
			<desc>This navigation is used to play the next part of the log that has time codes associated with it.
			First, the next playable node is located. Then, it is played because this viewing function is
			associated with the QuillDriver command 'playNode'.</desc>
		</navigation>
		<navigation name="CurrentPlayable" keystroke="control LEFT" val="ancestor-or-self::[*AUDIO]" command="playNode">
			<desc>This navigation is used to play the current part of the log that has time codes associated with it,
			for example, the current sentence. First, the current node is located. Then, it is played because this 
			viewing function is associated with the QuillDriver command 'playNode'.</desc>
		</navigation>
		<navigation name="PreviousPlayable" keystroke="control UP" val="preceding::*[AUDIO]" command="playNode">
			<desc>This navigation is used to play the last part of the log that has time codes associated with it.
			First, the next playable node is located. Then, it is played because this viewing function is
			associated with the QuillDriver command 'playNode'.</desc>
		</navigation>
		<navigation name="NextSentence" keystroke="control PAGE_DOWN" val="following::DIV">
			<desc>Jumps to the next sentence, without playing it.</desc>
		</navigation>
		<navigation name="PreviousSentence" keystroke="control PAGE_UP" val="preceding::DIV">
			<desc>Jumps to the previous sentence, without playing it.</desc>
		</navigation>		
		
		
		<!-- media related -->
		<transformation name="FixMedia" keystroke="control INSERT" node="ancestor-or-self::LOG/HEADER/SOUNDFILE" tasks="fixMedia">
			<desc>Takes the currently open media file or URL and copies it into the transcript.</desc>
		</transformation>
		
		<!-- time-coding -->
		<transformation name="MarkStartTime" keystroke="control COMMA" node="ancestor-or-self::DIV" tasks="markStart">
			<desc>This assigns the start time of the current sentence to the start time in the time coding window.</desc>
		</transformation>
		<transformation name="MarkStopTime" keystroke="control PERIOD" node="ancestor-or-self::DIV" tasks="markStop" command="stopMedia">
			<desc>This assigns the stop time of the current sentence to the stop time in the time coding window.</desc>
		</transformation>
		<transformation name="MarkStartAndStop" keystroke="control SLASH" node="ancestor-or-self::DIV" tasks="qd.insertTimes">
			<desc>This editing function is used to copy the time codes found under the video next to the 'Start' and 'Stop' buttons into 
			your XML file. They will be copied to the current node you are working on. For example, if you are 
			typing or translating text, they will be assigned to the current 'S' (Sentence) node.</desc>
		</transformation>
		<transformation name="IncreaseStartTime" keystroke="control EQUALS" node="ancestor-or-self::DIV" tasks="increaseStart">
			<desc>Increases the start time of the current sentence by a specified value.</desc>
		</transformation>
		<transformation name="RapidIncreaseStart" keystroke="alt control EQUALS" node="ancestor-or-self::DIV" tasks="increaseStart">
			<desc>Increases the start time of the current sentence by a specified value.</desc>
		</transformation>
		<transformation name="DecreaseStartTime" keystroke="control MINUS" node="ancestor-or-self::DIV" tasks="decreaseStart">
			<desc>Decreases the start time of the current sentence by a specified value.</desc>
		</transformation>
		<transformation name="RapidDecreaseStart" keystroke="alt control MINUS" node="ancestor-or-self::DIV" tasks="decreaseStart">
			<desc>Decreases the start time of the current sentence by a specified value.</desc>
		</transformation>
		<transformation name="IncreaseStopTime" keystroke="control CLOSE_BRACKET" node="ancestor-or-self::DIV" tasks="increaseStop">
			<desc>Increases the stop time of the current sentence by a specified value.</desc>
		</transformation>
		<transformation name="RapidIncreaseStop" keystroke="alt control CLOSE_BRACKET" node="ancestor-or-self::DIV" tasks="increaseStop">
			<desc>Increases the stop time of the current sentence by a specified value.</desc>
		</transformation>
		<transformation name="DecreaseStopTime" keystroke="control OPEN_BRACKET" node="ancestor-or-self::DIV" tasks="decreaseStop">
			<desc>Decreases the stop time of the current sentence by a specified value.</desc>
		</transformation>
		<transformation name="RapidDecreaseStop" keystroke="alt control OPEN_BRACKET" node="ancestor-or-self::DIV" tasks="decreaseStop">
			<desc>Decreases the stop time of the current sentence by a specified value.</desc>
		</transformation>
		
		<!-- adding content -->
		<transformation name="AppendDivision" keystroke="control H" node="ancestor-or-self::DIV" tasks="appendDivision">
			<desc>This function appends a Division as the last child of the current Division.</desc>
		</transformation>
		<transformation name="InsertDivisionAfter" keystroke="control M" node="ancestor-or-self::DIV" tasks="insertAfter">
			<desc>This function inserts a blank Division after the current Division.</desc>
		</transformation>
		<transformation name="InsertDivisionBefore" keystroke="control B" node="ancestor-or-self::DIV" tasks="insertBefore">
			<desc>This function inserts a blank Division before the current Division.</desc>
		</transformation>
		<transformation name="DeleteDivision" keystroke="control R" node="ancestor-or-self::DIV" tasks="removeNode">
			<desc>Use this to delete the current Division.</desc>
		</transformation>
	<!--	<transformation name="Insert Text Anchor" keystroke="control J" node="ancestor-or-self::DIV" tasks="insertTextAnchor">
			<desc>This allows the user to input a text anchor, i.e. the start and end pages of the text
			to which this Division corresponds.</desc>
		</transformation> -->
		<transformation name="SurroundwithPageLineBreaks" keystroke="control J" node="ancestor-or-self::DIV" tasks="surroundWithBreaks">
			<desc>Inserts a page-line milestone marker break.</desc>
		</transformation>
		<transformation name="RemovePageLineBreak" keystroke="control K" node="ancestor-or-self::PG" tasks="removeNode">
			<desc>Removes page-line break.</desc>
		</transformation>
		
		<!-- adding notes -->
		<transformation name="AddLexicalNote" keystroke="alt L" node="ancestor-or-self::DIV" tasks="addLexical">
			<desc>Use this to add a lexical note to the end of the current Division.</desc>
		</transformation>
		<transformation name="AddGrammaticalNote" keystroke="alt G" node="ancestor-or-self::DIV" tasks="addGrammatical">
			<desc>Use this to add a grammatical note to the end of the current Division.</desc>
		</transformation>
		<transformation name="AddPronunciationNote" keystroke="alt P" node="ancestor-or-self::DIV" tasks="addPronunciation">
			<desc>Use this to add a pronunciation note to the end of the current Division.</desc>
		</transformation>
		<transformation name="AddInterpretiveNote" keystroke="alt I" node="ancestor-or-self::DIV" tasks="addInterpretive">
			<desc>Use this to add an interpretive note to the end of the current Division.</desc>
		</transformation>
		<transformation name="AddSociolinguisticNote" keystroke="alt S" node="ancestor-or-self::DIV" tasks="addSociolinguistic">
			<desc>Use this to add a sociolinguistic note to the end of the current Division.</desc>
		</transformation>
		<transformation name="AddCulturalNote" keystroke="alt C" node="ancestor-or-self::DIV" tasks="addCultural">
			<desc>Use this to add a cultural note to the end of the current Division.</desc>
		</transformation>
		<transformation name="DeleteNote" keystroke="alt D" node="ancestor-or-self::NOTE" tasks="removeNode">
			<desc>Use this to delete the current note.</desc>
		</transformation>
		
		<!-- rendering parameters for tags -->
		<tag name="DESC" visible="true" visiblecontents="true" displayas="Description">
			<desc>This tells QuillDriver to display the DESC tag as 'Description', and to display its contents.</desc>
		</tag>		
		<tag name="NOTE" visible="true" visiblecontents="true" displayas="XPATH:@type" tibetan="false">
			<attribute name="type" visible="false"/>
			<desc>This tells QuillDriver to render the NOTE tag as the value of its
			'type' attribute.</desc>
		</tag>
		<tag name="AUDIO" visible="false" visiblecontents="false" displayas="[time codes]">
			<desc>This tells QuillDriver to not render the AUDIO tag at all. We do not render this tag since
			time codes are already marked under the video in the time coding area.</desc>
		</tag>
	<!--	
		<tag name="S" visible="true" visiblecontents="true" displayas="XPATH:@who">
			<attribute name="id" visible="false"/>
			<attribute name="who" visible="false"/>
			<desc>This tells QuillDriver to display the S tag as 'S', and to display its contents,
			but to visually suppress its 'id' attribute.</desc>
		</tag>
		<tag name="FORM" visible="true" visiblecontents="true" displayas="TIB" tibetan="true">
			<attribute name="type" visible="false"/>
			<desc>This tells QuillDriver to display the FORM tag as 'TIB', and to display its contents,
			but to visually suppress its 'type' attribute.</desc>
		</tag>
		<tag name="TRANSL" visible="true" visiblecontents="true" displayas="ENG" tibetan="false">
			<attribute name="xml:lang" visible="false"/>
			<desc>This tells QuillDriver to display the TRANSL tag as 'ENG', and to display its contents,
			but to visually suppress its 'xml:lang' attribute.</desc>
		</tag> -->
</qd-configuration>
