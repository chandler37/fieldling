<?xml version="1.0" encoding="UTF-8"?>
<qd-configuration>
		<parameter name="qd.root.element" val="LOG" type="text">
			<desc>This is a required parameter that tells QuillDriver what the root element of its data
			files must be. For example, in this case, it must be 'TEXT'.</desc>
		</parameter>
		<parameter name="qd.mediaurl" val="/LOG/HEADER/SOUNDFILE/@href">
			<desc>This is a required parameter that tells QuillDriver where to find the audio or video file associated with
			this XML annotation. Its value is an XPATH expression which is based at the root of the XML tree.</desc>
		</parameter>
		<parameter name="qd.timealignednodes" val="//*[AUDIO]">
			<desc>Without this parameter, QuillDriver will not know how to find out which nodes are 'associated'
			with time codes and which are not. The value of this parameter is an XPATH expression which returns
			all XML nodes that are associated with time codes, again searching from the root of the XML tree.</desc>
		</parameter>
		<parameter name="qd.nodebegins" val="AUDIO/@start">
			<desc>The parameter qd.timealignednodes returns the set of XML nodes associated with time codes. Once this
			set is established, then we still need to know how get the start and end time for an associated node.
			This parameter is an XPATH expression which locates the start time for a XML node associated with
			time codes.</desc>
		</parameter>
		<parameter name="qd.nodeends" val="AUDIO/@end">
			<desc>The parameter qd.timealignednodes returns the set of XML nodes associated with time codes. Once this
			set is established, then we still need to know how get the start and end time for an associated node.
			This parameter is an XPATH expression which locates the end time for a XML node associated with
			time codes.</desc>
		</parameter>
		<parameter name="qd.nearestplayableparent" val="ancestor-or-self::*[AUDIO]">
			<desc>For any given node, this required parameter locates the nearest 'playable' parent node.
			When you click on a node in the annotation the default action is to play the nearest playable
			parent node. For example, if time codes are associated with Divisions and you click on a Note,
			then setting this parameter correctly ensures that its containing Division is played.</desc>
		</parameter>
		<navigation name="Next Playable" keystroke="control DOWN" val="following::*[AUDIO]" command="playNode">
			<desc>This navigation is used to play the next part of the log that has time codes associated with it.
			First, the next playable node is located. Then, it is played because this viewing function is
			associated with the QuillDriver command 'playNode'.</desc>
		</navigation>
		<navigation name="Current Playable" keystroke="control LEFT" val="ancestor-or-self::[*AUDIO]" command="playNode">
			<desc>This navigation is used to play the current part of the log that has time codes associated with it,
			for example, the current sentence. First, the current node is located. Then, it is played because this 
			viewing function is associated with the QuillDriver command 'playNode'.</desc>
		</navigation>
		<navigation name="Previous Playable" keystroke="control UP" val="preceding::*[AUDIO]" command="playNode">
			<desc>This navigation is used to play the last part of the log that has time codes associated with it.
			First, the next playable node is located. Then, it is played because this viewing function is
			associated with the QuillDriver command 'playNode'.</desc>
		</navigation>
		<transformation name="Insert Time Codes" keystroke="control N" node="ancestor-or-self::DIV" tasks="insertTimes">
			<desc>This editing function is used to copy the time codes found under the video next to the 'Start' and 'Stop' buttons into 
			your log file. They will be copied to the Division you are working on. For example, if you are 
			typing a grammatical note, they will be assigned to the 'DIV' that contains this note.</desc>
		</transformation>
		<transformation name="Insert Text Anchor" keystroke="control M" node="ancestor-or-self::DIV" tasks="insertTextAnchor">
			<desc>This allows the user to input a text anchor, i.e. the start and end pages of the text
			to which this Division corresponds.</desc>
		</transformation>
		<transformation name="Append Division" keystroke="control Q" node="ancestor-or-self::DIV" tasks="appendDivision">
			<desc>This function appends a Division as the last child of the current Division.</desc>
		</transformation>
		<transformation name="Insert Division Before" keystroke="control W" node="ancestor-or-self::DIV" tasks="insertBefore">
			<desc>This function inserts a blank Division preceding the current Division.</desc>
		</transformation>
		<transformation name="Insert Division After" keystroke="control E" node="ancestor-or-self::DIV" tasks="insertAfter">
			<desc>This function inserts a blank Division following the current Division.</desc>
		</transformation>
		<transformation name="Delete Division" keystroke="control D" node="ancestor-or-self::DIV" tasks="removeNode">
			<desc>Use this to delete the current Division.</desc>
		</transformation>
		<transformation name="Add Lexical Note" keystroke="control 1" node="ancestor-or-self::DIV" tasks="addLexical">
			<desc>Use this to add a lexical note to the end of the current Division.</desc>
		</transformation>
		<transformation name="Add Grammatical Note" keystroke="control 2" node="ancestor-or-self::DIV" tasks="addGrammatical">
			<desc>Use this to add a grammatical note to the end of the current Division.</desc>
		</transformation>
		<transformation name="Add Pronunciation Note" keystroke="control 3" node="ancestor-or-self::DIV" tasks="addPronunciation">
			<desc>Use this to add a pronunciation note to the end of the current Division.</desc>
		</transformation>
		<transformation name="Add Interpretive Note" keystroke="control 4" node="ancestor-or-self::DIV" tasks="addInterpretive">
			<desc>Use this to add an interpretive note to the end of the current Division.</desc>
		</transformation>
		<transformation name="Add Sociolinguistic Note" keystroke="control 5" node="ancestor-or-self::DIV" tasks="addSociolinguistic">
			<desc>Use this to add a sociolinguistic note to the end of the current Division.</desc>
		</transformation>
		<transformation name="Add Cultural Note" keystroke="control 6" node="ancestor-or-self::DIV" tasks="addCultural">
			<desc>Use this to add a cultural note to the end of the current Division.</desc>
		</transformation>
		<transformation name="Delete Note" keystroke="control G" node="ancestor-or-self::NOTE" tasks="removeNode">
			<desc>Use this to delete the current note.</desc>
		</transformation>
		<tag name="NOTE" visible="true" visiblecontents="true" displayas="XPATH:@type">
			<attribute name="type" visible="false"/>
			<desc>This tells QuillDriver to render the NOTE tag as the value of its
			'type' attribute.</desc>
		</tag>
		<tag name="AUDIO" visible="true" visiblecontents="false" displayas="[time codes]">
			<desc>This tells QuillDriver to render the AUDIO tag as '[time codes]' instead. It specifies
			that the tag should be visible but that its contents should not. (While editing text, it
			clutters the screen to see the numerical start and end values - all we really need to see is
			whether or not a given Division has time codes associated with it. To see if the time codes
			are correct, we need only click on the Division and listen.</desc>
		</tag>
		<tag name="DESC" visible="true" visiblecontents="true" displayas="Description">
			<desc>This tells QuillDriver to display the DESC tag as 'Description', and to display its contents.</desc>
		</tag>
</qd-configuration>
