<?xml version="1.0" encoding="iso-8859-1"?>

<!-- 
@author Michel Jacobson (jacobson@idf.ext.jussieu.fr) and Edward Garrett (eg3p@virginia.edu)

This buildfile needs the following jar files:
for mediaplayer:
	extensions/jmf.jar
	extensions/java40.jar
	extensions/QTJava.zip
for QuillDriver:
	extensions/xalan.jar
	extensions/xercesImpl.jar
	extensions/xml-apis.jar
	extensions/jdom.jar
	extensions/jaxen-full.jar
	extensions/jaxen-jdom.jar
	extensions/saxpath.jar
for Tibetan-only QuillDriver
	extensions/Jskad.jar
-->





<project name="fieldlingtools" default="qd-create-webapp" basedir=".">

	<description>
This project includes assorted tools for field linguistics.
Currently, the main sub-projects are:

1) Media Player: a framework for synchronizing media files 
with linguistic (and other) annotations, using Java Media 
Framework and Quicktime for Java.

2) QuillDriver: a tool for linking XML-based annotations 
to media files. QuillDriver has a multilingual version and 
a version optimized for use with Tibetan script.
	</description>

    <property name="jnlp.app.suffix"    value=""/>
	<property name="ext"            value="extensions"/>
	<property name="doc.dir"            value="documentation"/>
	<property name="data.dir"	value="data"/>
	<property name="jvm" 		value="java"/>
	<property name="build.dir"      value="build"/>
	<property name="raw.source"	value="src"/>
	<property name="tweaked.source" value="${build.dir}/src"/>	
	<property name="tibetan.source"	value="${tweaked.source}/tibetan"/>
	<property name="unicode.source"	value="${tweaked.source}/unicode"/>
	<property name="build.classes"	value="${build.dir}/classes"/>
	<property name="unicode.classes"  value="${build.classes}/unicode"/>
	<property name="tibetan.classes"  value="${build.classes}/tibetan"/>
	<property name="build.doc"      value="${build.dir}/doc"/>
	<property name="build.eg"       value="${build.doc}/eg"/>
    <property name="webapp.dir"     value="${build.dir}/webapp"/>
    <property name="webapp.doc.dir" value="${webapp.dir}/doc"/>
    <property name="webapp.dtddoc.dir" value="${webapp.doc.dir}/dtddoc"/>
    <property name="webapp.api.dir" value="${webapp.doc.dir}/api"/>
    <property name="webapp.code.dir" value="${webapp.doc.dir}/code"/>
	<property name="webstart.lib" value="${webapp.dir}/lib_webstart"/>
	<property name="distrib.source"	value="distribSrc"/>
	<property name="jnlp.codebase"	value="http://altiplano.emich.edu/quilldriver"/>

	<!-- Tell ant where to find the code of the DTDDoc task -->
	<!--<taskdef name="DTDDoc" classname="DTDDoc.DTDDocTask" classpath="${ext}/ant-extensions/DTDDoc.jar;${ext}/ant-extensions/dtdparser120.jar"/>
-->
    
    
	<path id="my.classpath">
		<fileset id="extensions" dir="${ext}">
			<include name="*.jar"/>
			<include name="*.zip"/>
		</fileset>
	</path>

    <path id="ant.extensions">
        <fileset id="ant-extensions" dir="${ext}/ant-extensions">
            <include name="*.jar"/>
            <include name="*.zip"/>
        </fileset>
    </path>
    
    <!-- Uses the Apache Ant Jarbundler Task, written
    by Seth J. Morabito and available under GNU GPL at
    http://www.loomcom.com/jarbundler/ -->
    <taskdef name="jarbundler" classname="com.loomcom.ant.tasks.jarbundler.JarBundler">
        <classpath refid="ant.extensions"/>
    </taskdef>

    <target name="cvs-update" description="Performs a CVS update using anonymous pserver.">
        <cvs cvsRoot=":pserver:anonymous@cvs.sourceforge.net:/cvsroot/fieldling"
             command="-f -z3 -q update -d -P" failonerror="true"/>
    </target>

	<!-- Create the build directory structure used by compile -->
	<target name="init">
		<mkdir dir="${build.dir}"/>
		<mkdir dir="${build.doc}"/>
		<mkdir dir="${build.eg}"/>
		<mkdir dir="${tweaked.source}"/>
		<mkdir dir="${tibetan.source}"/>
		<mkdir dir="${unicode.source}"/>
		<mkdir dir="${build.classes}"/>
		<mkdir dir="${unicode.classes}"/>
		<mkdir dir="${tibetan.classes}"/>
		<mkdir dir="${webapp.dir}"/>
		<mkdir dir="${webapp.doc.dir}"/>
        <mkdir dir="${webapp.dtddoc.dir}"/>
		<mkdir dir="${webapp.api.dir}"/>
		<mkdir dir="${webapp.code.dir}"/>
		<mkdir dir="${webstart.lib}"/>
		<tstamp>
			<format property="qd.date" pattern="dd.MM.yy-h.mma"/>
		</tstamp>
	</target>

	<target name="clean" description="removes all generated files">
		<delete dir="${build.dir}"/>
        <delete dir="TEMP"/>
	</target>
	
	<target name="mp-compile" depends="init" description="compile mediaplayer source">
		<javac srcdir="${raw.source}" destdir="${unicode.classes}" includes="fieldling/mediaplayer/**" debug="on">
			<classpath refid="my.classpath"/>
		</javac>
		<copy todir="${tibetan.classes}">
			<fileset dir="${unicode.classes}">
				<include name="**/*"/>
			</fileset>
		</copy>
	</target>
		

    <!-- lines marked @UNICODE@ in the source are only for the Unicode version of QD -->
	<target name="create-unicode-source" if="unicode.source.isUptodate">
		<copy todir="${unicode.source}" overwrite="true">
			<fileset dir="${raw.source}" includes="**/*"/>
			<filterset>
				<filter token="TIBETAN" value="//TIBETAN-SPECIFIC "/> <!-- we keep this so that line #s aren't affected by the deletion -->
				<filter token="UNICODE" value=""/>
			</filterset>
		</copy>	
	</target>
	
    <!-- lines marked @TIBETAN@ are hacks for the non-Unicode Tibetan-only version of QD -->
	<target name="create-tibetan-source" if="tibetan.source.isUptodate">
		<copy todir="${tibetan.source}" overwrite="true">
			<fileset dir="${raw.source}" includes="**/*"/>
			<filterset>
				<filter token="TIBETAN" value=""/>
				<filter token="UNICODE" value="//NON-TIBETAN "/> <!-- we keep this so that line #s aren't affected by the deletion -->
			</filterset>
		</copy>
	</target>
	
	<target name="qd-compile" depends="init,mp-compile" description="compile qd source">
		<!-- Instructions for Unicode version of QD -->
		
		<!-- check to see if Unicode source is uptodate; if not, create it -->
		<!-- <uptodate property="unicode.source.isUptodate">
			<srcfiles dir="${raw.source}" includes="**/*.java"/>
			<mapper type="glob" from="*" to="${unicode.source}/*"/>
		</uptodate> 
		<antcall target="create-unicode-source"/> -->

		<!-- create Unicode source if it's not already up to date -->
		<copy todir="${unicode.source}" overwrite="false">
			<fileset dir="${raw.source}" includes="**/*"/>
			<filterset>
				<filter token="TIBETAN" value="//TIBETAN-SPECIFIC "/>
				<filter token="UNICODE" value=""/>
			</filterset>
		</copy>
		
		
		<!-- compile unicode source -->
		<javac srcdir="${unicode.source}" destdir="${unicode.classes}" includes="fieldling/quilldriver/**" debug="on">
			<classpath refid="my.classpath"/>
		</javac>
		
		<!-- copy associated unicode resources -->
		<copy todir="${unicode.classes}">
			<fileset dir="${raw.source}">
				<include name="MessageBundle*"/>
			</fileset>
			<fileset dir="${data.dir}/quilldriver">
				<include name="*.xsl"/>
				<include name="*.xml"/>
				<include name="*.dtd"/>
			</fileset>
            <fileset dir="${doc.dir}">
                <include name="changelog.txt"/>
            </fileset>
		</copy>
		<copy todir="${unicode.classes}/fieldling/quilldriver">
			<fileset dir="${data.dir}/quilldriver">
				<include name="*.gif"/>
				<include name="*.jpg"/>
			</fileset>
		</copy>

		<!-- Instructions for Tibetan version of QD -->
		
		<!-- create Tibetan source if it's not already up to date -->
		<copy todir="${tibetan.source}" overwrite="false">
			<fileset dir="${raw.source}" includes="**/*"/>
			<filterset>
				<filter token="TIBETAN" value=""/>
				<filter token="UNICODE" value="//NON-TIBETAN "/>
			</filterset>
		</copy>
		
		<!-- compile Tibetan source -->
		<javac srcdir="${tibetan.source}" destdir="${tibetan.classes}" includes="fieldling/quilldriver/**" debug="on">
			<classpath refid="my.classpath"/>
		</javac>
		
		<!-- copy associated Tibetan resources -->
		<copy todir="${tibetan.classes}">
			<fileset dir="${raw.source}">
				<include name="MessageBundle*"/>
			</fileset>
			<fileset dir="${data.dir}/quilldriver">
				<include name="*.xsl"/>
				<include name="*.xml"/>
				<include name="*.dtd"/>
			</fileset>
            <fileset dir="${doc.dir}">
                <include name="changelog.txt"/>
            </fileset>
		</copy>
		<copy todir="${tibetan.classes}/fieldling/quilldriver">
			<fileset dir="${data.dir}/quilldriver">
				<include name="*.gif"/>
				<include name="*.jpg"/>
			</fileset>
		</copy>
        
        <!-- create time-stamped 'About' files -->
        <tstamp>
            <format property="TODAY_UK" pattern="d-MMMM-yyyy" locale="en"/>
        </tstamp>
<echo file="${unicode.classes}/about.txt" 
append="false">QuillDriver

(c) 2004, Roger Andersen, Edward Garrett and 
David Germano

Version ${TODAY_UK}

Send feedback, including bug reports (with the 
version date), to

   fieldling-feedback@lists.sourceforge.net
   
This program is free software; you can redistribute 
it and/or modify it under the terms of the GNU General 
Public License as published by the Free Software 
Foundation; either version 2 of the License, or any 
later version.

Visit our main website for detailed user and developer 
resources:

   http://altiplano.emich.edu/quilldriver

For open discussion, read and contribute to our blog:

   http://altiplano.emich.edu/blogs/quilldriver
   
If you like QuillDriver, we could use your support in various
ways. Visit our website for details.</echo>

<echo file="${tibetan.classes}/about.txt" 
append="false">QuillDriver-TIB (optimized for Tibetan script)

(c) 2004, Roger Andersen, Edward Garrett and David Germano

Version ${TODAY_UK} (TIB)

Send feedback, including bug reports (with the
version date), to

   fieldling-feedback@lists.sourceforge.net
   

This program is free software; you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation; either version 2 of the License, or
any later version.
    
The code has been written by Edward Garrett, Michel Jacobson and
Shreyaswini Ramaswamy. Visit &lt;http://altiplano.emich.edu/quilldriver/index.html&gt;
to access source code, sample content, instructions and other resources.
If you would like to contribute, please consider becoming a
developer.</echo>
   
	</target>


    
    
    
	<!-- SOMEHOW USING <java jar="quilldriver.jar" etc.> DOES NOT WORK PROPERLY:
		IF YOU DO THIS THEN THE EXTENSIONS ARE NOT FOUND (AT LEAST ON MAC OS X. 
		SO INSTEAD I RUN THE CLASS AND PUT THE JAR AT THE HEAD OF THE CLASSPATH. -->

	<target name="qd-run-unicode" depends="qd-compile" description="runs multilingual version of QuillDriver">
		<java classname="fieldling.quilldriver.QDShell" jvm="${jvm}" fork="yes">
			<classpath>
				<pathelement location="${unicode.classes}"/>
				<!-- <pathelement location="${build.dist}/quilldriver.jar"/> -->
				<path refid="my.classpath"/>
			</classpath>
		</java>
	</target>

	<target name="qd-run-tibetan" depends="qd-compile" description="runs Tibetan version of QuillDriver">
		<java classname="fieldling.quilldriver.QDShell" jvm="${jvm}" fork="yes">
			<classpath>
				<pathelement location="${tibetan.classes}"/>
				<!-- <pathelement location="${build.dist}/quilldriver-TIB.jar"/> -->
				<path refid="my.classpath"/>
			</classpath>
		</java>
	</target>
    


	<target name="qd-unicode-jnlp">
		<!-- Step 2: Create the jnlp file -->
		<!-- Write the head of the .jnlp file: -->
		<echo file="${webapp.dir}/${jnlp.file}" append="false">
<![CDATA[<?xml version="1.0" encoding="utf-8"?>
<jnlp spec="1.0+"]]></echo>
		<!-- Write the middle of the .jnlp file: -->
		<echo file="${webapp.dir}/${jnlp.file}" append="true">
		<![CDATA[      codebase="]]>${jnlp.codebase}<![CDATA["]]></echo>
		<!-- Write the tail of the .jnlp file: -->
		<echo file="${webapp.dir}/${jnlp.file}" append="true">
<![CDATA[      href="]]>${jnlp.file}<![CDATA[">
<information>
  <title>QuillDriver]]>${jnlp.app.suffix}<![CDATA[</title>
  <vendor>EMU-UCLA</vendor>
  <homepage href="http://altiplano.emich.edu/quilldriver" />
  <description>
QuillDriver is a fully customizable tool for transcribing and annotating 
digital video files. Annotation files can be any well-formed XML, 
and supported media players include Java Media Framework (JMF) 
and Quicktime for Java.
  </description>
  <offline-allowed/>
</information>
<security>
  <all-permissions/>
</security>
<resources os="Windows" arch="x86">
  <j2se version="1.4+"/>
  <jar href="lib_webstart/]]>${jar.file}<![CDATA["/>
  <jar href="lib_webstart/xml-apis.jar"/>
  <jar href="lib_webstart/xercesImpl.jar"/>
  <jar href="lib_webstart/xalan.jar"/>
  <jar href="lib_webstart/jdom.jar"/>
  <jar href="lib_webstart/jaxen-full.jar"/>
  <jar href="lib_webstart/jaxen-jdom.jar"/>
  <jar href="lib_webstart/saxpath.jar"/>
  <jar href="lib_webstart/mail.jar"/>
  <jar href="lib_webstart/activation.jar"/>
</resources>
<resources os="Mac OS X" arch="ppc">
  <j2se version="1.3"/>
  <jar href="lib_webstart/]]>${jar.file}<![CDATA["/>
  <jar href="lib_webstart/xml-apis.jar"/>
  <jar href="lib_webstart/xercesImpl.jar"/>
  <jar href="lib_webstart/xalan.jar"/>
  <jar href="lib_webstart/jdom.jar"/>
  <jar href="lib_webstart/jaxen-full.jar"/>
  <jar href="lib_webstart/jaxen-jdom.jar"/>
  <jar href="lib_webstart/saxpath.jar"/>
  <jar href="lib_webstart/mail.jar"/>
  <jar href="lib_webstart/activation.jar"/>
</resources>
<application-desc main-class="fieldling.quilldriver.QDShell"/>
</jnlp>]]>
		</echo>
	</target>
	
	<target name="qd-tibetan-jnlp">
		<!-- Step 2: Create the jnlp file -->
		<!-- Write the head of the .jnlp file: -->
		<echo file="${webapp.dir}/${jnlp.file}" append="false">
<![CDATA[<?xml version="1.0" encoding="utf-8"?>
<jnlp spec="1.0+"]]></echo>
		<!-- Write the middle of the .jnlp file: -->
		<echo file="${webapp.dir}/${jnlp.file}" append="true">
		<![CDATA[      codebase="]]>${jnlp.codebase}<![CDATA["]]></echo>
		<!-- Write the tail of the .jnlp file: -->
		<echo file="${webapp.dir}/${jnlp.file}" append="true">
<![CDATA[      href="]]>${jnlp.file}<![CDATA[">
<information>
  <title>QuillDriver-TIBETAN]]>${jnlp.app.suffix}<![CDATA[</title>
  <vendor>THDL</vendor>
  <homepage href="http://iris.lib.virginia.edu/tibet/tools/quilldriver" />
  <description>
QuillDriver is a tool for transcribing and annotating digital video files.
Annotation files can be any well-formed XML, and supported media players include
Java Media Framework (JMF) and Quicktime for Java. QuillDriver-TIBETAN has been
optimized for use with Tibetan script.
  </description>
  <offline-allowed/>
</information>
<security>
  <all-permissions/>
</security>
<resources os="Windows" arch="x86">
  <j2se version="1.4+"/>
  <jar href="lib_webstart/]]>${jar.file}<![CDATA["/>
  <jar href="lib_webstart/Jskad.jar"/>
  <jar href="lib_webstart/xml-apis.jar"/>
  <jar href="lib_webstart/xercesImpl.jar"/>
  <jar href="lib_webstart/xalan.jar"/>
  <jar href="lib_webstart/jdom.jar"/>
  <jar href="lib_webstart/jaxen-full.jar"/>
  <jar href="lib_webstart/jaxen-jdom.jar"/>
  <jar href="lib_webstart/saxpath.jar"/> 
  <jar href="lib_webstart/mail.jar"/>
  <jar href="lib_webstart/activation.jar"/>
</resources>
<resources os="Mac OS X" arch="ppc">
  <j2se version="1.3"/>
  <jar href="lib_webstart/]]>${jar.file}<![CDATA["/>
  <jar href="lib_webstart/Jskad.jar"/>
  <jar href="lib_webstart/xml-apis.jar"/>
  <jar href="lib_webstart/xercesImpl.jar"/>
  <jar href="lib_webstart/xalan.jar"/>
  <jar href="lib_webstart/jdom.jar"/>
  <jar href="lib_webstart/jaxen-full.jar"/>
  <jar href="lib_webstart/jaxen-jdom.jar"/>
  <jar href="lib_webstart/saxpath.jar"/>
  <jar href="lib_webstart/mail.jar"/>
  <jar href="lib_webstart/activation.jar"/>
</resources>
<application-desc main-class="fieldling.quilldriver.QDShell"/>
</jnlp>]]>
		</echo>
	</target>
    
    <target name="qd-create-webapp" depends="qd-compile" description="creates distribution version of fieldling">
        
        <!-- Step 1: create jar files needed for qd -->
        <jar jarfile="${webstart.lib}/mediaplayer.jar" basedir="${unicode.classes}" />
        <jar jarfile="${webstart.lib}/quilldriver.jar" basedir="${unicode.classes}" /> <!-- Unicode version -->
        <jar jarfile="${webstart.lib}/quilldriver-TIB.jar" basedir="${tibetan.classes}" /> <!-- Tibetan version -->

        <!-- Step 2: copy libraries needed for qd -->
		<copy todir="${webstart.lib}" includeEmptyDirs="false">
			<fileset dir="${ext}">
				<!-- We don't need to copy these files because they should always be
				in the System's classpath if installed correctly. -->
				<exclude name="QTJava.zip"/>
				<exclude name="jmf.jar"/>
				<exclude name="java40.jar"/>
                <exclude name="ant-extensions/*"/>
			</fileset>
		</copy>
        
        <!-- Step 3: sign all jars -->
		<signjar alias="testsigner" keystore="${data.dir}/keystore" storepass="testpassword">
			<fileset dir="${webstart.lib}">
				<include name="**/*.jar"/>
			</fileset>
		</signjar>
		
		<!-- Step 4: create jnlp descriptor files -->
		<antcall target="qd-unicode-jnlp">
			<param name="jnlp.file" value="QuillDriver.jnlp"/>
			<param name="jar.file" value="quilldriver.jar"/>
		</antcall>
		<antcall target="qd-tibetan-jnlp">
			<param name="jnlp.file" value="QuillDriver-TIB.jnlp"/>
			<param name="jar.file" value="quilldriver-TIB.jar"/>
		</antcall>

		
        <!--
		<DTDDoc showHiddenTags="true"
            showFixmeTags="false"
			sourceDir="${data.dir}/quilldriver"
			destDir="${distrib.dtddoc.dir}"
			docTitle = "QD DTDs">
			<include name="*.dtd"/>
		</DTDDoc>
        -->
        
        
        <!-- Step 5.5 make Windows executable -->
        
            <!-- generic version -->
        <mkdir dir="TEMP/gen/QuillDriver"/>
        <copy todir="TEMP/gen/QuillDriver/DONTMOVE">
            <fileset dir="${webstart.lib}"/>
        </copy>
	<echo file="TEMP/gen/QuillDriver/Run-QD.bat" append="false">javaw -cp DONTMOVE/quilldriver.jar;DONTMOVE/xml-apis.jar;DONTMOVE/xercesImpl.jar;DONTMOVE/xalan.jar;DONTMOVE/jdom.jar;DONTMOVE/jaxen-full.jar;DONTMOVE/jaxen-jdom.jar;DONTMOVE/;DONTMOVE/saxpath.jar;DONTMOVE/mail.jar;DONTMOVE/activation.jar fieldling.quilldriver.QDShell</echo>
        <zip destfile="${webapp.dir}/QD.zip" basedir="TEMP/gen"/>
        
            <!-- Tibetan version -->
        <mkdir dir="TEMP/tib/QuillDriver"/>
        <copy todir="TEMP/tib/QuillDriver/DONTMOVE">
            <fileset dir="${webstart.lib}"/>
        </copy>
	<echo file="TEMP/tib/QuillDriver/Run-QD-TIB.bat" append="false">javaw -cp DONTMOVE/quilldriver-TIB.jar;DONTMOVE/Jskad.jar;DONTMOVE/xml-apis.jar;DONTMOVE/xercesImpl.jar;DONTMOVE/xalan.jar;DONTMOVE/jdom.jar;DONTMOVE/jaxen-full.jar;DONTMOVE/jaxen-jdom.jar;DONTMOVE/;DONTMOVE/saxpath.jar;DONTMOVE/mail.jar;DONTMOVE/activation.jar fieldling.quilldriver.QDShell</echo>
        <zip destfile="${webapp.dir}/QD-TIB.zip" basedir="TEMP/tib"/>
        
        <!-- Step 5.7 make OS X executable -->
        
            <!-- generic version -->
        <mkdir dir="TEMP/OSX"/>
        <antcall target="mac-os-x-jarbundling"/>
        
        <!-- for some reason calling this within Ant doesn't work!
            but if we call it using the OS X console outside of Ant
            then it does work.
        <tar destfile="QD.tar" basedir="${webapp.dir}">
            <include name="QuillDriver.app"/>
            <include name="QuillDriver.app/**"/>
        </tar> -->
        
        <!-- delete the TEMP directory -->
        <delete dir="TEMP"/>
        
        <!-- Step 5.9: copy and create documentation and api files -->
        <javadoc use="true"
                author="true"
                version="true"
                classpathref="my.classpath"
                destdir="${webapp.api.dir}">
                <fileset dir="${unicode.source}">
                    <include name="**/*.java"/>
                    <exclude name="signstream/**/*.java"/> <!-- remove this to get SignStream API too -->
                </fileset>
                <link href="http://java.sun.com/j2se/1.4.2/docs/api"/> <!-- JDK API -->
                <link href="http://www.jdom.org/docs/apidocs"/> <!-- JDOM API -->
                <link href="http://xml.apache.org/xerces2-j/javadocs/api"/> <!-- Xerces API -->
                <link href="http://xml.apache.org/xalan-j/apidocs"/> <!-- Xalan API -->
        </javadoc>

        <zip destfile="${webapp.dir}/fieldling_src.zip" basedir="." excludes="${build.dir}/**/* ${build.dir}" update="true"/>
        <zip destfile="${webapp.dir}/fieldling_api.zip" basedir="${webapp.api.dir}" update="true"/>
        
        <copy todir="${webapp.dir}">
            <fileset dir="${doc.dir}" includes="**/*"/>
        </copy>
    </target>
    
    <target name="MayWeRunJarbundler">
      <condition property="use.jarbundler">
        <available file="/System/Library/Frameworks/JavaVM.framework/Versions/Current/Resources/MacOS/JavaApplicationStub"/>
      </condition>
    </target>

    <target name="mac-os-x-jarbundling"
            if="use.jarbundler"
            description="On Mac OS X, run jarbundler task"
            depends="MayWeRunJarbundler">
        <jarbundler dir="${webapp.dir}" name="QuillDriver"
                    mainclass="fieldling.quilldriver.QDShell"
                    aboutmenuname="QuillDriver"
                    jvmversion="1.3*"
                    infostring="QuillDriver, (c) 2004, licensed under GNU GPL"
                    jars="${webstart.lib}/quilldriver.jar ${webstart.lib}/xml-apis.jar ${webstart.lib}/xercesImpl.jar ${webstart.lib}/xalan.jar ${webstart.lib}/jdom.jar ${webstart.lib}/jaxen-full.jar ${webstart.lib}/jaxen-jdom.jar ${webstart.lib}/saxpath.jar ${webstart.lib}/mail.jar ${webstart.lib}/activation.jar"
                    />
            <!-- Tibetan version --> 
        <jarbundler dir="${webapp.dir}" name="QuillDriver-TIB"
                    mainclass="fieldling.quilldriver.QDShell"
                    aboutmenuname="QuillDriver-TIB"
                    jvmversion="1.3*"
                    infostring="QuillDriver-TIB, (c) 2004, licensed under GNU GPL"
                    jars="${webstart.lib}/quilldriver-TIB.jar ${webstart.lib}/Jskad.jar ${webstart.lib}/xml-apis.jar ${webstart.lib}/xercesImpl.jar ${webstart.lib}/xalan.jar ${webstart.lib}/jdom.jar ${webstart.lib}/jaxen-full.jar ${webstart.lib}/jaxen-jdom.jar ${webstart.lib}/saxpath.jar ${webstart.lib}/mail.jar ${webstart.lib}/activation.jar"
                    />
    </target>
	
    <!--
    	<target name="mp-eg" depends="mp-sign" description="compile, build jars, create an example">
		<delete dir="${build.eg}"/>
		<copy todir="${build.eg}">
			<fileset dir="${doc}/eg">
				<include name="*.*"/>
			</fileset>
		</copy>
		<property location="${build.eg}/BAC.mp3" name="mediafile"/>
		<xslt out="${build.eg}/testJMF.htm" in="${build.eg}/BAC.xml" style="${build.eg}/playerManager.xsl">
			<param name="player" expression="jmf"/>
			<param name="mediafile" expression="http://hitchcock.itc.virginia.edu/TibetMedia/movies/Dream.mpg"/>
			<param name="mediafile" expression="file:${mediafile}"/>
		</xslt>
		<xslt out="${build.eg}/testQT4J.htm" in="${build.eg}/BAC.xml" style="${build.eg}/playerManager.xsl">
			<param name="player" expression="qt4j"/>
			<param name="mediafile" expression="http://hitchcock.itc.virginia.edu/TibetMedia/movies/WomenTalkDreamsHI.mov"/>
		I get an access denied error when I try this: 
			<param name="mediafile" expression="file:${mediafile}"/>
		</xslt>
	</target>

	<target name="distrib" depends="clean,mp-jar,qd-jar,doc" description="clean, compile, build jars, docs, and zips">
		<copy todir="${build.doc}">
			<fileset dir="${doc}">
				<include name="*.*"/>
			</fileset>
		</copy>
		<copy todir="${build.eg}">
			<fileset dir="${doc}/eg">
				<include name="*.*"/>
			</fileset>
		</copy>
		<property location="${build.eg}/BAC.mp3" name="mediafile"/>
		<style out="${build.eg}/testJMF.htm" in="${build.eg}/BAC.xml" style="${build.eg}/playerManager.xsl">
			<param name="player" expression="jmf"/>
			<param name="mediafile" expression="file://${mediafile}"/>
		</style>
		<style out="${build.eg}/testQT4J.htm" in="${build.eg}/BAC.xml" style="${build.eg}/playerManager.xsl">
			<param name="player" expression="qt4j"/>
			<param name="mediafile" expression="file://${mediafile}"/>
		</style>
		<zip zipfile="${build.dir}/FieldLing.zip" basedir="${build.dist}"/>
		<zip zipfile="${build.dir}/QuillDriver.zip" basedir="${build.dist}" includes="quilldriver.jar,lib/**"/>
	</target>
	
	<target name="distribSrc" description="source distribution">
		<delete dir="${distrib.source}"/>
		<mkdir dir="${distrib.source}"/>
		<copy todir="${distrib.source}/extensions">
			<fileset dir="${ext}">
				<include name="**/*.*"/>
			</fileset>
		</copy>
		<copy todir="${distrib.source}/documentation">
			<fileset dir="${doc}">
				<include name="**/*.*"/>
			</fileset>
		</copy>
		<copy todir="${distrib.source}/source">
			<fileset dir="${raw.source}">
				<include name="**/*.*"/>
			</fileset>
		</copy>
		<copy todir="${distrib.source}" file="build.xml"/>
		<zip zipfile="fieldlingSrc.zip" basedir="${distrib.source}"/>
		<delete dir="${distrib.source}"/>
	</target>
    -->
</project>
